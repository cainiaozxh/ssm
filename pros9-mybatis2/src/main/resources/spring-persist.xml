<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--包扫描
    像转换器和拦截器用不用扫描进ioc容器中?
    -->
    <context:component-scan base-package="com.atguigu">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="regex" expression="com.atguigu.entity.*"/>
    </context:component-scan>

    <!--数据源-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!--配置SqlSessionFactoryBean-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="druidDataSource"/>
        <!--指定映射文件,如果影身文件和Mapper接口在同一个包下,则可以省略该配置-->
        <property name="mapperLocations" value="classpath:com/atguigu/mapper/*Mapper.xml"/>
        <!--实体类类型别名-->
        <property name="typeAliasesPackage" value="com.atguigu.entity"/>
        <!--配置全局Settings
            1 驼峰命名 2 懒加载
        -->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <!--开启驼峰命名映射-->
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <!--开启懒加载-->
                <property name="lazyLoadingEnabled" value="true"/>
            </bean>
        </property>
    </bean>

    <!--配置mapper扫描器
    作用:把类/接口名字的首字母小写,其他不变,作为映射器的名字
    映射器接口UserMapper,被扫描后创建的映射器bean的名字为userMapper,就相当于@Repository注解
    -->
    <!--方式一-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.atguigu.mapper"/>
    </bean>
    <!--方式二-->
    <!--<mybatis-spring:scan base-package="com.atguigu.ssm.mapper"/>-->

    <!--开启基于注解的声明式事务-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="false"/>

    <!--配置切面-->
    <aop:aspectj-autoproxy/>

    <!--配置异常映射-->

    <!--配置自动类型转换器-->
    <bean id="formattingConversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.atguigu.convertor.AddressConvertor"/>
            </set>
        </property>
    </bean>
    <!--配置文件上传解析器-->

    <!--配置拦截器-->
</beans>