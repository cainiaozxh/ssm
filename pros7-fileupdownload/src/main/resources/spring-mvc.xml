<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--组件扫描-->
    <context:component-scan base-package="com.atguigu.controller,com.atguigu.exception"/>

    <!--配置数据源-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!--配置事物管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!--配置自动类型转换器-->
    <!--<bean id="formattingConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
    <!--    <property name="converters">-->
    <!--        <set>-->
    <!--            <bean class="com.atguigu.converter.AddressConverter"/>-->
    <!--        </set>-->
    <!--    </property>-->
    <!--</bean>-->

    <!--开启基于注解的声明式事务
    proxy-target-class 可以有两种选择,有两种表示
    true 实现类有没有接口 都采用cglib动态代理
    false 实现类有接口 cglib动态代理
          实现类没有接口 proxy动态代理
    -->
    <!--<tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="false"/>-->
    <!--配置切面-->
    <!--<aop:aspectj-autoproxy/>-->

    <!--配置视图解析器-->
    <!--配置Thymeleaf视图解析器-->
    <bean id="thymeleafViewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <!--spring引入内部bean,配置模板解析器-->
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--视图前缀-->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!--视图后缀-->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--mvc三注解-->
    <mvc:annotation-driven/>

    <!--处理静态资源-->
    <mvc:default-servlet-handler/>
    <!--<mvc:view-controller path=""-->
    <mvc:view-controller path="/" view-name="portal"/>
    <mvc:view-controller path="/index.jsp" view-name="portal"/>
    <mvc:view-controller path="/ajax/demo4" view-name="axios04"/>
    <mvc:view-controller path="/ajax/demo5" view-name="axios05"/>
    <mvc:view-controller path="/ajax/demo6" view-name="axios06"/>
    <mvc:view-controller path="/ajax/demo7" view-name="axios07"/>

    <!--
    配置拦截器
    不同拦截器到底先执行谁,由配置的顺序确定,和全局局部无关,由配置顺序而定
    -->

    <!--配置异常映射-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--    <property name="exceptionMappings">-->
    <!--        <props>-->
    <!--            <prop key="java.lang.NullPointerException">exp-null.html</prop>-->
    <!--            <prop key="java.lang.ArithmeticException">exp-arith.html</prop>-->
    <!--            <prop key="java.lang.RuntimeException">exp-run.html</prop>-->
    <!--            <prop key="java.lang.Exception">exp.html</prop>-->
    <!--        </props>-->
    <!--    </property>-->
    <!--    <property name="exceptionAttribute" value="atguiguException"/>-->
    <!--</bean>-->

    <!--配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--由于上传文件的表单请求体编码方式是multipart/form-data格式,所以要在解析器中指定字符集-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--单个上传文件的大小 200k-->
        <property name="maxUploadSizePerFile" value="204800"/>
        <!--<property name="maxUploadSizePerFile" value="102400"/>-->
        <!--一次请求中多个上传文件的总大小 1000k-->
        <property name="maxUploadSize" value="2048000"/>
    </bean>

    <!--配置异常映射-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--    <property name="exceptionMappings">-->
    <!--        <props>-->
    <!--            <prop key="java.lang.Exception">exp.html</prop>-->
    <!--        </props>-->
    <!--    </property>-->
    <!--    <property name="exceptionAttribute" value="atguiguException"/>-->
    <!--</bean>-->
</beans>